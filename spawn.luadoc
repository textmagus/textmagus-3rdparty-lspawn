-- Copyright 2012-2015 Mitchell mitchell.att.foicica.com. See LICENSE.

---
-- Spawns an interactive child process in a separate thread.
-- @param argv A command line string containing the program's name followed by
--   arguments to pass to it. `PATH` is searched for program names.
-- @param working_dir Optional current working directory (cwd) for the child
--   process. The default value is `nil`, which inherits the parent's cwd.
-- @param stdout_cb Optional Lua function that accepts a string parameter for a
--   block of standard output read from the child. Stdout is read asynchronously
--   in 1KB or 0.5KB blocks (depending on the platform), or however much data is
--   available at the time.
-- @param stderr_cb Optional Lua function that accepts a string parameter for a
--   block of standard error read from the child. Stderr is read asynchronously
--   in 1KB or 0.5kB blocks (depending on the platform), or however much data is
--   available at the time.
-- @param exit_cb Optional Lua function that is called when the child process
--   finishes. The child's exit status is passed.
-- @return proc
-- @usage spawn('lua buffer.filename', nil, print)
-- @usage proc = spawn('lua -e "print(io.read())"', nil, print)
--        proc:write('foo\n')
-- @see proc
function spawn(argv, working_dir, stdout_cb, stderr_cb, exit_cb) end
